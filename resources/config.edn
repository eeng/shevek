; Default config file. Every property here can be overridden with environment variables or Java system properties. We use cprop (https://github.com/tolitius/cprop) for configuration so check its documentation for more instructions on how to do this.

{:env "production"
 :port 4000
 :nrepl-port 4001

 :mongodb-uri "mongodb://localhost/shevek"
 :druid-uri "http://localhost:8082"

 ; You should change this key, preferably with an environment variable SESSION__KEY
 ; Sessions expire in 24 hs by default
 :session {:key "9you3altsufu84w5" :timeout 86400}

 ; Set to 0 to disable auto discovery (in seconds)
 :datasources-discovery-interval 60

 :time-boundary-update-interval 30

 :log {:to "stdout"     ; Use a path to log to file
       :level :info     ; Set to :debug to log queries sent to Druid
       :timestamp true}

 ; For now it's used only to notify errors to the system admin
 :notifications
 {:server {:host "" :user "" :pass ""}
  :errors {:to ""}}

 ; InfluxDB example:
 ; :monitoring {:influx {:uri "influxuri" :username "admin" :password "admin" :database "db"}}
 :monitoring {}

 :cubes
 [{:name "wikipedia"
   :description "Druid quickstart sample of Wikipedia stats"
   :dimensions
   [{:name "isMinor" :format "boolean"}
    {:name "isUnpatrolled" :format "boolean"}
    {:name "isAnonymous" :format "boolean"}
    {:name "isRobot" :format "boolean"
     :description "Indicates whether a computer or a human being made this edit"}
    {:name "isNew" :format "boolean"}
    {:name "regionIsoCode" :title "Region ISO Code"}
    {:name "regionName" :default-sort-by "regionIsoCode"}
    {:name "countryIsoCode" :title "Country ISO Code"}
    {:name "countryName" :empty-value "Country Not Available"}
    {:name "year" :expression "timestamp_extract(__time, 'YEAR')"}
    {:name "month" :expression "timestamp_format(__time, 'MMMM')"}
    {:name "monthNumWithExpression" :type "LONG"
     :expression "timestamp_extract(__time, 'MONTH')"}
    {:name "monthNumWithExtraction" :column "__time" :type "LONG"
     :extraction [{:type "timeFormat" :format "M"}]}
    {:name "semester"
     :column "__time"
     :extraction [{:type "javascript"
                   :function "function(d) { return 'S' + (Math.floor(new Date(d).getMonth() / 6) + 1) }"}]}]
   :measures
   [{:name "deleted" :description "Deleted characters"}
    {:name "added"}
    {:name "delta"}]}]}
